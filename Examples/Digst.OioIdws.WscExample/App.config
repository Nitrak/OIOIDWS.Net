<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="oioIdwsWcfConfiguration" type="Digst.OioIdws.Wsc.OioWsTrust.Configuration, Digst.OioIdws.Wsc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
		<section name="oioIdwsLoggingConfiguration" type="Digst.OioIdws.Common.Logging.Configuration, Digst.OioIdws.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
	</configSections>
	<system.diagnostics>
  <sources>
    <source propagateActivity="false" name="System.ServiceModel"
    switchValue="Verbose">
    <listeners>
     <add name="ServiceModelMessageLoggingListener">
      <filter type="" />
     </add>
    </listeners>
   </source>
    <source name="System.ServiceModel.MessageLogging" switchValue="Verbose">
    <listeners>
     <add name="ServiceModelMessageLoggingListener">
      <filter type="" />
     </add>
    </listeners>
   </source>
    <!--
    in order to enable logKnownPii the machine.config must also be updated with
    
    <system.serviceModel>
      <machineSettings enableLoggingKnownPii="true"/>
    </system.serviceModel>
    
    logKnownPii makes it possible to see the concrete value which the digest value represent in a SignedInfo reference element.
    -->
    <source name="System.IdentityModel" logKnownPii="true" switchValue="Verbose">
      <listeners>
        <add name="ServiceModelMessageLoggingListener">
          <filter type="" />
        </add>
      </listeners>
    </source>
   <source name="Digst.OioIdws" switchValue="Information">
    <listeners>
     <add name="ServiceModelMessageLoggingListener">
      <filter type="" />
     </add>
    </listeners>
   </source>
  </sources>
  <sharedListeners>
   <add initializeData="C:\temp\Digst.OioIdws.WscExample.svclog"
    type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
    name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
    <filter type="" />
   </add>
  </sharedListeners>
 </system.diagnostics>
	<oioIdwsWcfConfiguration debugMode="true" stsEndpointAddress="https://SecureTokenService.test-nemlog-in.dk/SecurityTokenService.svc" tokenLifeTimeInMinutes="5" wspEndpointID="https://wsp.itcrew.dk">
		<clientCertificate findValue="0919ed32cf8758a002b39c10352be7dcccf1222a" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
		<stsCertificate findValue="2e7a061560fa2c5e141a634dc1767dacaeec8d12" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
	</oioIdwsWcfConfiguration>
	<oioIdwsLoggingConfiguration logger="Digst.OioIdws.WscExample.Log4NetLogger, Digst.OioIdws.WscExample"/>
	<startup>
		<supportedRuntime sku=".NETFramework,Version=v4.5" version="v4.0"/>
	</startup>
	<system.serviceModel>
		<diagnostics>
			<messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"/>
		</diagnostics>
		<extensions>
			<bindingExtensions>
				<add name="LibBasBinding" type="Digst.OioIdws.LibBas.Bindings.LibBasBindingCollectionElement, Digst.OioIdws.LibBas"/>
			</bindingExtensions>
			<behaviorExtensions>
				<add name="LibBasBehavior" type="Digst.OioIdws.LibBas.Behaviors.LibBasClientBehaviorExtensionElement, Digst.OioIdws.LibBas"/>
			</behaviorExtensions>
		</extensions>
		<behaviors>
			<endpointBehaviors>
				<behavior name="LibBasBehaviourConfiguration">
					<clientCredentials>
						<serviceCertificate>
							<scopedCertificates>
                <add findValue="dc35c0466ad606422adff717c9cb8e3274d8772e" storeLocation="LocalMachine" storeName="My" targetUri="http://Digst.OioIdws.Wsp:9090/HelloWorld" x509FindType="FindByThumbprint"/>
							</scopedCertificates>
						</serviceCertificate>
					</clientCredentials>
					<!--Endpoints can only point to a single behaviour configuration. Hence, we need to include the LibBasBehavior in a existing behavior-->
					<LibBasBehavior/>
				</behavior>
			</endpointBehaviors>
		</behaviors>
		<bindings>
			<LibBasBinding>
				<binding name="LibBasBindingConfiguration" useHttps="false"/>
			</LibBasBinding>
		</bindings>
		<client>
			<endpoint address="http://Digst.OioIdws.Wsp:9090/HelloWorld" behaviorConfiguration="LibBasBehaviourConfiguration" binding="LibBasBinding" bindingConfiguration="LibBasBindingConfiguration" contract="HelloWorldProxy.IHelloWorld">
				<identity>
					<dns value="eID JAVA test (funktionscertifikat)"/>
				</identity>
			</endpoint>
		</client>
	</system.serviceModel>
	<log4net>
		<appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
			<file value="c:\temp\Digst.OioIdws.WscExample.log"/>
			<appendToFile value="true"/>
			<maximumFileSize value="100KB"/>
			<maxSizeRollBackups value="2"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%level %thread %logger - %message%newline"/>
			</layout>
		</appender>
		<root>
			<level value="DEBUG"/>
			<appender-ref ref="RollingFile"/>
		</root>
	</log4net>
</configuration>